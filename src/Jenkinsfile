pipeline {
    parameters {
        choice name: 'NODE', choices: ['win', 'mac'], description: 'Node'
        string name: 'UNITY_VERSION', defaultValue: '2021.1.28f1'
        string name: 'UNITY_VERSION_REVISION', defaultValue: ''
        extendedChoice name: 'REQUIRED_MODULES',
                description: 'Required Modules',
                groovyScript: 'return unityHub.getAvailableModulesForChoice()',
                multiSelectDelimiter: ',',
                quoteValue: true,
                saveJSONParameterToFile: false,
                type: 'PT_CHECKBOX',
                visibleItemCount: 10
    }

    agent {
        label params.NODE
    }

    stages {
        stage('Setup parameters') {
            steps {
                script {
                    properties([
                            parameters([
                                    choice(
                                            choices: ['ONE', 'TWO'],
                                            name: 'PARAMETER_01'
                                    ),
                                    booleanParam(
                                            defaultValue: true,
                                            description: '',
                                            name: 'BOOLEAN'
                                    ),
                                    text(
                                            defaultValue: '''
                                this is a multi-line 
                                string parameter example
                                ''',
                                            name: 'MULTI-LINE-STRING'
                                    ),
                                    string(
                                            defaultValue: 'scriptcrunch',
                                            name: 'STRING-PARAMETER',
                                            trim: true
                                    )
                            ])
                    ])
                }
            }
        }
        stage('Checkout') {
            steps {
                git branch: 'dev',
                        credentialsId: 'bitbucket',
                        url: 'https://bitbucket.org/prosaas/cryptotanks-unity.git'
            }
        }
        stage('Build') {
            steps {
                script {
                    echo params.REQUIRED_MODULES
                    echo params.REQUIRED_MODULES.class
//                    unityHub.init(UNITY_HUB_PATH)
//                    def unityPath = unityHub.getUnityPath(params.UNITY_VERSION, params.UNITY_VERSION_REVISION, true)
//                    unity.init(unityPath)
//                    unity.execute('.', 'JenkinsBuilder.Build', 'android')
                }
            }
        }
    }
}
